{"swagger":"2.0","info":{"version":"latest","title":"Slamby API","description":"Slamby API","termsOfService":"None"},"basePath":"/","paths":{"/api/Services/Classifier/{id}":{"get":{"tags":["ClassifierService"],"operationId":"ClassifierGetService","produces":[],"parameters":[{"name":"id","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"","schema":{"$ref":"#/definitions/ClassifierService"}},"400":{"description":"","schema":{"$ref":"#/definitions/ErrorsModel"}},"404":{"description":"NotFound"}},"deprecated":false}},"/api/Services/Classifier/{id}/Prepare":{"post":{"tags":["ClassifierService"],"operationId":"ClassifierPrepareService","produces":[],"parameters":[{"name":"id","in":"path","required":true,"type":"string"},{"name":"classifierPrepareSettings","in":"body","required":false,"schema":{"$ref":"#/definitions/ClassifierPrepareSettings"}}],"responses":{"202":{"description":"","schema":{"$ref":"#/definitions/Process"}},"400":{"description":"","schema":{"$ref":"#/definitions/ErrorsModel"}},"404":{"description":"","schema":{"$ref":"#/definitions/ErrorsModel"}}},"deprecated":false}},"/api/Services/Classifier/{id}/Activate":{"post":{"tags":["ClassifierService"],"operationId":"ClassifierActivateService","produces":[],"parameters":[{"name":"id","in":"path","required":true,"type":"string"},{"name":"classifierActivateSettings","in":"body","required":false,"schema":{"$ref":"#/definitions/ClassifierActivateSettings"}}],"responses":{"200":{"description":""},"400":{"description":"","schema":{"$ref":"#/definitions/ErrorsModel"}},"404":{"description":"","schema":{"$ref":"#/definitions/ErrorsModel"}}},"deprecated":false}},"/api/Services/Classifier/{id}/Deactivate":{"post":{"tags":["ClassifierService"],"operationId":"ClassifierDeactivateService","produces":[],"parameters":[{"name":"id","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":""},"400":{"description":"","schema":{"$ref":"#/definitions/ErrorsModel"}},"404":{"description":"","schema":{"$ref":"#/definitions/ErrorsModel"}}},"deprecated":false}},"/api/Services/Classifier/{id}/Recommend":{"post":{"tags":["ClassifierService"],"operationId":"ClassifierRecommendService","produces":[],"parameters":[{"name":"id","in":"path","required":true,"type":"string"},{"name":"request","in":"body","required":false,"schema":{"$ref":"#/definitions/ClassifierRecommendationRequest"}}],"responses":{"200":{"description":"","schema":{"type":"array","items":{"$ref":"#/definitions/ClassifierRecommendationResult"}}},"400":{"description":"","schema":{"$ref":"#/definitions/ErrorsModel"}}},"deprecated":false}},"/api/Services/Classifier/{id}/ExportDictionaries":{"post":{"tags":["ClassifierService"],"operationId":"ClassifierExportDictionaries","produces":[],"parameters":[{"name":"id","in":"path","required":true,"type":"string"},{"name":"settings","in":"body","required":false,"schema":{"$ref":"#/definitions/ExportDictionariesSettings"}}],"responses":{"200":{"description":"","schema":{"$ref":"#/definitions/Process"}},"400":{"description":"","schema":{"$ref":"#/definitions/ErrorsModel"}},"404":{"description":"","schema":{"$ref":"#/definitions/ErrorsModel"}}},"deprecated":false}},"/api/DataSets":{"get":{"tags":["DataSet"],"operationId":"GetDataSets","produces":[],"responses":{"200":{"description":"","schema":{"type":"array","items":{"$ref":"#/definitions/DataSet"}}}},"deprecated":false},"post":{"tags":["DataSet"],"operationId":"CreateDataSet","produces":[],"parameters":[{"name":"dataSet","in":"body","required":false,"schema":{"$ref":"#/definitions/DataSet"}}],"responses":{"201":{"description":"Created"},"400":{"description":"BadRequest"},"409":{"description":"Conflict"}},"deprecated":false}},"/api/DataSets/{name}":{"get":{"tags":["DataSet"],"operationId":"GetDataSet","produces":[],"parameters":[{"name":"name","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"","schema":{"$ref":"#/definitions/DataSet"}},"404":{"description":""}},"deprecated":false},"put":{"tags":["DataSet"],"operationId":"UpdateDataSet","produces":[],"parameters":[{"name":"name","in":"path","required":true,"type":"string"},{"name":"dataSetUpdate","in":"body","required":false,"schema":{"$ref":"#/definitions/DataSetUpdate"}}],"responses":{"200":{"description":"OK"},"304":{"description":"NotModified"},"404":{"description":"NotFound"},"409":{"description":"Conflict"}},"deprecated":false},"delete":{"tags":["DataSet"],"operationId":"DeleteDataSet","produces":[],"parameters":[{"name":"name","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"OK"},"404":{"description":"NotFound"},"406":{"description":"","schema":{"$ref":"#/definitions/ErrorsModel"}}},"deprecated":false}},"/api/DataSets/Schema":{"post":{"tags":["DataSet"],"operationId":"CreateDataSetSchema","produces":[],"parameters":[{"name":"dataSet","in":"body","required":false,"schema":{"$ref":"#/definitions/DataSet"}}],"responses":{"201":{"description":"Created"},"400":{"description":"BadRequest"},"409":{"description":"Conflict"}},"deprecated":false}},"/api/Documents/Bulk":{"post":{"tags":["Document"],"operationId":"BulkDocuments","produces":[],"parameters":[{"name":"settings","in":"body","required":false,"schema":{"$ref":"#/definitions/DocumentBulkSettings"}}],"responses":{"200":{"description":"","schema":{"$ref":"#/definitions/BulkResults"}},"400":{"description":"","schema":{"$ref":"#/definitions/ErrorsModel"}}},"deprecated":false}},"/api/Documents/{id}":{"get":{"tags":["Document"],"operationId":"GetDocument","produces":[],"parameters":[{"name":"id","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"","schema":{"type":"object"}},"404":{"description":"NotFound"}},"deprecated":false},"put":{"tags":["Document"],"operationId":"UpdateDocument","produces":[],"parameters":[{"name":"id","in":"path","required":true,"type":"string"},{"name":"document","in":"body","required":false,"schema":{"type":"object"}}],"responses":{"200":{"description":"","schema":{"type":"object"}},"400":{"description":"","schema":{"$ref":"#/definitions/ErrorsModel"}},"404":{"description":"NotFound"}},"deprecated":false},"delete":{"tags":["Document"],"operationId":"DeleteDocument","produces":[],"parameters":[{"name":"id","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"OK"},"404":{"description":"NotFound"}},"deprecated":false}},"/api/Documents":{"post":{"tags":["Document"],"operationId":"CreateDocument","produces":[],"parameters":[{"name":"document","in":"body","required":false,"schema":{"type":"object"}}],"responses":{"201":{"description":"Created"},"400":{"description":"","schema":{"$ref":"#/definitions/ErrorsModel"}},"409":{"description":"Conflict"}},"deprecated":false}},"/api/Documents/Filter":{"post":{"tags":["Document"],"operationId":"GetFilteredDocuments","produces":[],"parameters":[{"name":"filterSettings","in":"body","required":false,"schema":{"$ref":"#/definitions/DocumentFilterSettings"}}],"responses":{"200":{"description":"","schema":{"$ref":"#/definitions/PaginatedList[Object]"}},"400":{"description":"","schema":{"$ref":"#/definitions/ErrorsModel"}}},"deprecated":false}},"/api/Documents/Sample":{"post":{"tags":["Document"],"operationId":"GetSampleDocuments","produces":[],"parameters":[{"name":"sampleSettings","in":"body","required":false,"schema":{"$ref":"#/definitions/DocumentSampleSettings"}}],"responses":{"200":{"description":"","schema":{"$ref":"#/definitions/PaginatedList[Object]"}},"400":{"description":"","schema":{"$ref":"#/definitions/ErrorsModel"}}},"deprecated":false}},"/api/Documents/Copy":{"post":{"tags":["Document"],"operationId":"CopyDocuments","produces":[],"parameters":[{"name":"copySettings","in":"body","required":false,"schema":{"$ref":"#/definitions/DocumentCopySettings"}}],"responses":{"200":{"description":"OK"},"409":{"description":"Conflict"}},"deprecated":false}},"/api/Documents/Move":{"post":{"tags":["Document"],"operationId":"MoveDocuments","produces":[],"parameters":[{"name":"moveSettings","in":"body","required":false,"schema":{"$ref":"#/definitions/DocumentMoveSettings"}}],"responses":{"200":{"description":"OK"},"409":{"description":"Conflict"}},"deprecated":false}},"/api/Services/Prc/{id}":{"get":{"tags":["PrcService"],"operationId":"PrcGetService","produces":[],"parameters":[{"name":"id","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"","schema":{"$ref":"#/definitions/PrcService"}}},"deprecated":false}},"/api/Services/Prc/{id}/Prepare":{"post":{"tags":["PrcService"],"operationId":"PrcPrepareService","produces":[],"parameters":[{"name":"id","in":"path","required":true,"type":"string"},{"name":"prcPrepareSettings","in":"body","required":false,"schema":{"$ref":"#/definitions/PrcPrepareSettings"}}],"responses":{"202":{"description":"","schema":{"$ref":"#/definitions/Process"}}},"deprecated":false}},"/api/Services/Prc/{id}/Activate":{"post":{"tags":["PrcService"],"operationId":"PrcActivateService","produces":[],"parameters":[{"name":"id","in":"path","required":true,"type":"string"},{"name":"prcActivateSettings","in":"body","required":false,"schema":{"$ref":"#/definitions/PrcActivateSettings"}}],"responses":{"200":{"description":""}},"deprecated":false}},"/api/Services/Prc/{id}/Deactivate":{"post":{"tags":["PrcService"],"operationId":"PrcDeactivateService","produces":[],"parameters":[{"name":"id","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":""}},"deprecated":false}},"/api/Services/Prc/{id}/Recommend":{"post":{"tags":["PrcService"],"operationId":"PrcRecommendService","produces":[],"parameters":[{"name":"id","in":"path","required":true,"type":"string"},{"name":"request","in":"body","required":false,"schema":{"$ref":"#/definitions/PrcRecommendationRequest"}}],"responses":{"200":{"description":"","schema":{"type":"array","items":{"$ref":"#/definitions/PrcRecommendationResult"}}}},"deprecated":false}},"/api/Services/Prc/{id}/ExportDictionaries":{"post":{"tags":["PrcService"],"operationId":"PrcExportDictionaries","produces":[],"parameters":[{"name":"id","in":"path","required":true,"type":"string"},{"name":"settings","in":"body","required":false,"schema":{"$ref":"#/definitions/ExportDictionariesSettings"}}],"responses":{"200":{"description":"","schema":{"$ref":"#/definitions/Process"}}},"deprecated":false}},"/api/Processes":{"get":{"tags":["Process"],"operationId":"GetProcesses","produces":[],"parameters":[{"name":"allStatus","in":"query","required":false,"type":"boolean"}],"responses":{"200":{"description":"","schema":{"type":"array","items":{"$ref":"#/definitions/Process"}}}},"deprecated":false}},"/api/Processes/{id}":{"get":{"tags":["Process"],"operationId":"GetProcess","produces":[],"parameters":[{"name":"id","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"","schema":{"$ref":"#/definitions/Process"}},"404":{"description":""}},"deprecated":false}},"/api/Processes/{id}/Cancel":{"post":{"tags":["Process"],"operationId":"CancelProcess","produces":[],"parameters":[{"name":"id","in":"path","required":true,"type":"string"}],"responses":{"202":{"description":"Accepted"},"400":{"description":"","schema":{"$ref":"#/definitions/ErrorsModel"}},"404":{"description":""}},"deprecated":false}},"/api/Services":{"get":{"tags":["Service"],"operationId":"GetServices","produces":[],"responses":{"200":{"description":"","schema":{"type":"array","items":{"$ref":"#/definitions/Service"}}}},"deprecated":false},"post":{"tags":["Service"],"operationId":"CreateService","produces":[],"parameters":[{"name":"service","in":"body","required":false,"schema":{"$ref":"#/definitions/Service"}}],"responses":{"201":{"description":"Created"},"400":{"description":"BadRequest"}},"deprecated":false}},"/api/Services/{id}":{"get":{"tags":["Service"],"operationId":"GetService","produces":[],"parameters":[{"name":"id","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"","schema":{"$ref":"#/definitions/Service"}},"404":{"description":"NotFound"}},"deprecated":false},"put":{"tags":["Service"],"operationId":"UpdateService","produces":[],"parameters":[{"name":"id","in":"path","required":true,"type":"string"},{"name":"service","in":"body","required":false,"schema":{"$ref":"#/definitions/Service"}}],"responses":{"200":{"description":"","schema":{"$ref":"#/definitions/Service"}},"404":{"description":"NotFound"}},"deprecated":false},"delete":{"tags":["Service"],"operationId":"DeleteService","produces":[],"parameters":[{"name":"id","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"OK"},"404":{"description":"NotFound"}},"deprecated":false}},"/api/Status":{"get":{"tags":["Status"],"operationId":"GetStatus","produces":[],"responses":{"200":{"description":"","schema":{"$ref":"#/definitions/Status"}}},"deprecated":false}},"/api/Tags/Bulk":{"post":{"tags":["Tag"],"operationId":"BulkTags","produces":[],"parameters":[{"name":"settings","in":"body","required":false,"schema":{"$ref":"#/definitions/TagBulkSettings"}}],"responses":{"200":{"description":"","schema":{"$ref":"#/definitions/BulkResults"}}},"deprecated":false}},"/api/Tags/CleanDocuments":{"post":{"tags":["Tag"],"operationId":"CleanDocuments","produces":[],"responses":{"200":{"description":""}},"deprecated":false}},"/api/Tags":{"get":{"tags":["Tag"],"operationId":"GetTags","produces":[],"parameters":[{"name":"withDetails","in":"query","required":false,"type":"boolean"}],"responses":{"200":{"description":"","schema":{"type":"array","items":{"$ref":"#/definitions/Tag"}}}},"deprecated":false},"post":{"tags":["Tag"],"operationId":"CreateTag","produces":[],"parameters":[{"name":"tag","in":"body","required":false,"schema":{"$ref":"#/definitions/Tag"}}],"responses":{"201":{"description":"Created","schema":{"$ref":"#/definitions/Tag"}},"406":{"description":"NotAcceptable","schema":{"$ref":"#/definitions/ErrorsModel"}},"409":{"description":"Conflict","schema":{"$ref":"#/definitions/ErrorsModel"}}},"deprecated":false}},"/api/Tags/{id}":{"get":{"tags":["Tag"],"operationId":"GetTag","produces":[],"parameters":[{"name":"id","in":"path","required":true,"type":"string"},{"name":"withDetails","in":"query","required":false,"type":"boolean"}],"responses":{"200":{"description":"","schema":{"$ref":"#/definitions/Tag"}}},"deprecated":false},"put":{"tags":["Tag"],"operationId":"UpdateTag","produces":[],"parameters":[{"name":"id","in":"path","required":true,"type":"string"},{"name":"tag","in":"body","required":false,"schema":{"$ref":"#/definitions/Tag"}}],"responses":{"200":{"description":"OK"},"404":{"description":"","schema":{"$ref":"#/definitions/ErrorsModel"}},"406":{"description":"","schema":{"$ref":"#/definitions/ErrorsModel"}}},"deprecated":false},"delete":{"tags":["Tag"],"operationId":"DeleteTag","produces":[],"parameters":[{"name":"id","in":"path","required":true,"type":"string"},{"name":"force","in":"query","required":false,"type":"boolean"},{"name":"cleanDocuments","in":"query","required":false,"type":"boolean"}],"responses":{"200":{"description":"OK"},"404":{"description":"NotFound"},"409":{"description":"","schema":{"$ref":"#/definitions/ErrorsModel"}}},"deprecated":false}},"/api/Tags/ExportWords":{"post":{"tags":["Tag"],"operationId":"WordsExport","produces":[],"parameters":[{"name":"settings","in":"body","required":false,"schema":{"$ref":"#/definitions/TagsExportWordsSettings"}}],"responses":{"200":{"description":"","schema":{"$ref":"#/definitions/Process"}},"400":{"description":"","schema":{"$ref":"#/definitions/ErrorsModel"}}},"deprecated":false}}},"definitions":{"ClassifierService":{"description":"For the common properties detail check the [Service](#/definitions/Service)","required":["Name","Type"],"type":"object","properties":{"PrepareSettings":{"$ref":"#/definitions/ClassifierPrepareSettings"},"ActivateSettings":{"$ref":"#/definitions/ClassifierActivateSettings"},"Id":{"type":"string"},"Name":{"type":"string"},"Description":{"type":"string"},"Status":{"description":"New - the service was created | \r\n            Busy - the service is working on something (e.g.: during the Prepare) | \r\n            Prepared - the service was prepared so you can activate it to use | \r\n            Active - the service so you can use it","enum":["New","Busy","Prepared","Active"],"type":"string"},"Type":{"enum":["Classifier","Prc"],"type":"string"},"ProcessIdList":{"description":"Contains all the process ids which belongs to this service","type":"array","items":{"type":"string"}},"ActualProcessId":{"type":"string"}}},"ClassifierPrepareSettings":{"description":"These settings are required for the training (Prepare method)","required":["DataSetName","NGramList"],"type":"object","properties":{"DataSetName":{"description":"The DataSet name where the Classifier will be trained from","type":"string"},"TagIdList":{"description":"The list of the tag Ids which will be trained","type":"array","items":{"type":"string"}},"NGramList":{"description":"The list of the NGrams which will be trained. The maximum NGram can be the DataSet's NGram","type":"array","items":{"format":"int32","type":"integer"}}}},"ClassifierActivateSettings":{"description":"These settings are required for the recommendation (Recommend method)","type":"object","properties":{"EmphasizedTagIdList":{"description":"The list of the tag Ids which will emphasized during the recommendation","type":"array","items":{"type":"string"}},"TagIdList":{"description":"\"The list of the tag Ids which will be activated (the recommendation will be contains these only)","type":"array","items":{"type":"string"}},"NGramList":{"description":"The list of the NGrams will be activated (the recommendation algorithm will be use these only)","type":"array","items":{"format":"int32","type":"integer"}}}},"ErrorsModel":{"description":"Stores error messages","type":"object","properties":{"Errors":{"type":"array","items":{"type":"string"}}}},"Process":{"description":"","type":"object","properties":{"Id":{"description":"The process Guid identifier","type":"string"},"Start":{"format":"date-time","description":"The UTC time of the process start","type":"string"},"End":{"format":"date-time","description":"The UTC time of the process end","type":"string"},"Percent":{"format":"double","description":"The percent of the whole process. (e.g.: 12.23 means 12.23%)","type":"number"},"Description":{"description":"Process description","type":"string"},"Status":{"description":"InProgress - the process is in progress, it's working |\r\n            Cancelled - the process was cancelled by the user |\r\n            Finished - the process was finished succesffully |\r\n            Error - the process stopped by an error, see the ErrorMessages for detailed information |\r\n            Interrupted - the process was interrupted by an unknown event (e.g.: server restart) - under development |\r\n            Paused - the process was paused  - under development","enum":["InProgress","Cancelled","Finished","Error","Interrupted","Paused"],"type":"string"},"Type":{"description":"Type of the process","enum":["ClassifierPrepare","PrcPrepare","ClassifierExportDictionaries","PrcExportDictionaries","TagsExportWords"],"type":"string"},"ErrorMessages":{"type":"array","items":{"type":"string"}},"ResultMessage":{"type":"string"}}},"ClassifierRecommendationRequest":{"required":["Text"],"type":"object","properties":{"Text":{"description":"The text the you want to classify","type":"string"},"Count":{"format":"int32","description":"How many results you want to see in the response (default value is 3)","type":"integer"},"UseEmphasizing":{"description":"Use emphasizing algorithm during this recommendation","type":"boolean"},"NeedTagInResult":{"description":"If you want to see all the tag object in the response","type":"boolean"}}},"ClassifierRecommendationResult":{"type":"object","properties":{"TagId":{"description":"The recommended tag id","type":"string"},"Score":{"format":"double","description":"The score that belongs to the tag id","type":"number"},"Tag":{"$ref":"#/definitions/Tag"}}},"Tag":{"description":"Tag object","required":["Id","Name"],"type":"object","properties":{"Id":{"description":"The identifier of the tag. It must be unique accross the DataSet","type":"string"},"Name":{"description":"\"Name of the tag","type":"string"},"ParentId":{"description":"The identifier of the parent of the tag. It must be the id of an existing tag","type":"string"},"Properties":{"$ref":"#/definitions/TagProperties","description":"Tag properties"}}},"TagProperties":{"description":"Contains calculated values for the tag","type":"object","properties":{"Path":{"description":"A tag array contains parent path elements","type":"array","items":{"$ref":"#/definitions/PathItem"}},"Level":{"format":"int32","description":"The level of the tag in the hierarchy (root level is: 0)","type":"integer"},"IsLeaf":{"description":"If the tag is a leaf tag. Leaf tag means the tag is not a parent of any other tags","type":"boolean"},"DocumentCount":{"format":"int32","description":"Document count for the tag","type":"integer"},"WordCount":{"format":"int32","description":"Word count for the tag","type":"integer"}}},"PathItem":{"description":"Tag path item object","type":"object","properties":{"Id":{"description":"Id of the Tag","type":"string"},"Name":{"description":"Name of the Tag","type":"string"},"Level":{"format":"int32","description":"Level of the Tag","type":"integer"}}},"ExportDictionariesSettings":{"type":"object","properties":{"TagIdList":{"type":"array","items":{"type":"string"}},"NGramList":{"type":"array","items":{"format":"int32","type":"integer"}}}},"DataSet":{"description":"DataSet object","required":["Name","NGramCount","IdField","TagField","InterpretedFields"],"type":"object","properties":{"Name":{"description":"Name of your dataset. Contains just A-Z letters and numbers without any space. This field is unique","type":"string"},"NGramCount":{"format":"int32","description":"To deeper analyze your text, a dataset uses ngram to index your document. You can set the ngramcount from 1 to 6","type":"integer"},"IdField":{"description":"To identify a document you need to use IDs. You can use your own conventions to name your ID field, but in the settings you need to provide the field name of the id field from your sample document","type":"string"},"TagField":{"description":"For text categorization we provide a predefined document field to store your tags (or categories). If your documents are related to tags or categories, please insert here the tags field name from your sample JSON","type":"string"},"InterpretedFields":{"description":"For text analysis you can set those document fields that contains useful text content. Slamby is doing ngram analysis and text process related works on these fields. How to decide which field you need to set here? Only the interpreted field can be a part of text analyzes. To provide these fields just simply insert the needed text fields from your JSON document","type":"array","items":{"type":"string"}},"Statistics":{"$ref":"#/definitions/DataSetStats","description":"These are read only calculated values"},"SampleDocument":{"description":"Using flexible document schema, you can store all of your required data inside one simple dataset. To create a dataset with your required schema you can provide a sample document. The schema is flexible; the only requirement is using standard JSON format","type":"object"},"Schema":{"description":"Using flexible document schema, you can store all of your required data inside one simple dataset. To create a dataset with your required schema you can provide a schema. The schema is flexible","type":"object"}}},"DataSetStats":{"description":"DataSetStats object","type":"object","properties":{"DocumentsCount":{"format":"int32","description":"Shows the available document number","type":"integer"}}},"DataSetUpdate":{"description":"DataSet update object","required":["Name"],"type":"object","properties":{"Name":{"description":"Name of your dataset. Contains just A-Z letters and numbers without any space. This field is unique","type":"string"}}},"DocumentBulkSettings":{"required":["Documents"],"type":"object","properties":{"Documents":{"description":"Array of the documents to be saved","type":"array","items":{"type":"object"}}}},"BulkResults":{"type":"object","properties":{"Results":{"description":"Array of the documents to be saved","type":"array","items":{"$ref":"#/definitions/BulkResult"}}}},"BulkResult":{"description":"\"Result of a bulk save element.\r\n            If the save was successful then the StatusCode is 2XX. \r\n            If there was a problem, the StatusCode is not 2XX, and the error message is in the Error field.","type":"object","properties":{"StatusCode":{"format":"int32","description":"HTTP status code","type":"integer"},"Id":{"description":"Document id","type":"string"},"Error":{"description":"Error message","type":"string"}}},"DocumentFilterSettings":{"required":["Pagination"],"type":"object","properties":{"Pagination":{"$ref":"#/definitions/Pagination"},"IdsOnly":{"description":"Query returns only with Id field values","type":"boolean"},"Filter":{"$ref":"#/definitions/Filter"}}},"Pagination":{"type":"object","properties":{"Offset":{"format":"int32","description":"How many element you want to skip. For example if the offset is 6, than the first element will be the 7. in the list","type":"integer"},"Limit":{"format":"int32","description":"How many element you want to get back in this request","type":"integer"},"OrderDirection":{"description":"The ordering of the list, Ascending or Descending","enum":["Asc","Desc"],"type":"string"},"OrderByField":{"description":"It must be an existing field. Declares the base of the ordering","type":"string"}}},"Filter":{"type":"object","properties":{"TagIds":{"description":"You can direct your search queries into specific tags. \r\n            By giving the required tag id list, the filter will affect just the provided tags. \r\n            It's useful to create powerful search queries inside given tags. \r\n            To filter inside a whole dataset, you can set this field to empty","type":"array","items":{"type":"string"}},"Query":{"description":"Set here the filters. The value is the query string you want to apply. \r\n            Can be BOOL expressions. You can use these: AND, OR, NOT. \r\n            For example: 'searchforthis AND NOT butnotthis'. \r\n            Also you can use wildcards. For example: 'exampl*'. \r\n            If you want to search in a specified field, than do thie: 'title:searchthisinthetitle'","type":"string"}}},"PaginatedList[Object]":{"type":"object","properties":{"Items":{"description":"Containing the actual displayed items. The type of the elements depend on the method","type":"array","items":{"type":"object"}},"Pagination":{"$ref":"#/definitions/Pagination","description":"Pagination object"},"Count":{"format":"int32","description":"The count of the actual returned items","type":"integer"},"Total":{"format":"int32","description":"The count of all items which are the pagination applied","type":"integer"}}},"DocumentSampleSettings":{"required":["Id","Pagination"],"type":"object","properties":{"Id":{"description":"It must be a random string for every new sampling, but must be the same for the same sampling during pagination. \r\n            If you leave it empty than it'll be generated automatically, but then you can not use pagination","type":"string"},"TagIds":{"description":"You can create a sample from a whole dataset, or just from a given tag section. \r\n            To create a sample from the whole dataset please keep it empty. \r\n            To create a sample from a given number of tags please provide the tag ids","type":"array","items":{"type":"string"}},"IsStratified":{"description":"You can use stratified sampling. In this case the sampling will be created by tags. For general sampling don't use stratified sampling","type":"boolean"},"Pagination":{"$ref":"#/definitions/Pagination","description":"Pagination object"},"Percent":{"format":"double","description":"Defining the sample size, you can use percentage or a given number. \r\n            Using a percentage you can define the document number by a percentage. \r\n            This percentage will calculate the document number by using the available dataset document number. \r\n            E.g.: if your dataset contains 100.000 documents and you are using 10% as a sampling size without stratified method, your sample size is 100.000 x 10% = 10.000","type":"number"},"Size":{"format":"int32","description":"Define your sample size by providing a simple integer. \r\n            E.g.: if your dataset contains 100.000 documents and you are using 3.000 as a sampling size without stratified method, your sample size is 3.000","type":"integer"},"IdsOnly":{"description":"Query returns only with Id field values","type":"boolean"}}},"DocumentCopySettings":{"required":["Ids","TargetDataSetName"],"type":"object","properties":{"Ids":{"description":"The Id list of the documents you want to copy","type":"array","items":{"type":"string"}},"TargetDataSetName":{"description":"The DataSet name where you want to copy the selected documents","type":"string"}}},"DocumentMoveSettings":{"required":["Ids","TargetDataSetName"],"type":"object","properties":{"Ids":{"description":"The Id list of the documents you want to move","type":"array","items":{"type":"string"}},"TargetDataSetName":{"description":"The DataSet name where you want to move the selected documents","type":"string"}}},"PrcService":{"required":["Name","Type"],"type":"object","properties":{"PrepareSettings":{"$ref":"#/definitions/PrcPrepareSettings"},"ActivateSettings":{"$ref":"#/definitions/PrcActivateSettings"},"Id":{"type":"string"},"Name":{"type":"string"},"Description":{"type":"string"},"Status":{"description":"New - the service was created | \r\n            Busy - the service is working on something (e.g.: during the Prepare) | \r\n            Prepared - the service was prepared so you can activate it to use | \r\n            Active - the service so you can use it","enum":["New","Busy","Prepared","Active"],"type":"string"},"Type":{"enum":["Classifier","Prc"],"type":"string"},"ProcessIdList":{"description":"Contains all the process ids which belongs to this service","type":"array","items":{"type":"string"}},"ActualProcessId":{"type":"string"}}},"PrcPrepareSettings":{"required":["DataSetName"],"type":"object","properties":{"DataSetName":{"type":"string"},"TagIdList":{"type":"array","items":{"type":"string"}}}},"PrcActivateSettings":{"type":"object","properties":{"FieldsForRecommendation":{"type":"array","items":{"type":"string"}}}},"PrcRecommendationRequest":{"required":["Text","TagId"],"type":"object","properties":{"Text":{"type":"string"},"Count":{"format":"int32","type":"integer"},"NeedDocumentInResult":{"type":"boolean"},"TagId":{"type":"string"},"Filter":{"$ref":"#/definitions/Filter"},"Weights":{"type":"array","items":{"$ref":"#/definitions/Weight"}}}},"Weight":{"description":"Weight object","type":"object","properties":{"Query":{"type":"string"},"Value":{"format":"double","type":"number"}}},"PrcRecommendationResult":{"type":"object","properties":{"DocumentId":{"type":"string"},"Score":{"format":"double","type":"number"},"Document":{"type":"object"}}},"Service":{"required":["Name","Type"],"type":"object","properties":{"Id":{"type":"string"},"Name":{"type":"string"},"Description":{"type":"string"},"Status":{"description":"New - the service was created | \r\n            Busy - the service is working on something (e.g.: during the Prepare) | \r\n            Prepared - the service was prepared so you can activate it to use | \r\n            Active - the service so you can use it","enum":["New","Busy","Prepared","Active"],"type":"string"},"Type":{"enum":["Classifier","Prc"],"type":"string"},"ProcessIdList":{"description":"Contains all the process ids which belongs to this service","type":"array","items":{"type":"string"}},"ActualProcessId":{"type":"string"}}},"Status":{"description":"Status object","type":"object","properties":{"ApiVersion":{"description":"API version string","type":"string"},"ProcessorCount":{"format":"int32","description":"Number of processors on the API machine","type":"integer"},"CpuUsage":{"format":"double","description":"CPU usage %","type":"number"},"AvailableFreeSpace":{"format":"double","description":"Available free disk space in MB","type":"number"},"TotalMemory":{"format":"double","description":"Total physical memory in MB","type":"number"},"FreeMemory":{"format":"double","description":"Free physical memory in MB","type":"number"}}},"TagBulkSettings":{"description":"Stores complete tag hierarchy for bulk insert","required":["Tags"],"type":"object","properties":{"Tags":{"description":"The complete tag hierarchy array","type":"array","items":{"$ref":"#/definitions/Tag"}}}},"TagsExportWordsSettings":{"description":"","required":["NGramList"],"type":"object","properties":{"TagIdList":{"type":"array","items":{"type":"string"}},"NGramList":{"type":"array","items":{"format":"int32","type":"integer"}}}}},"securityDefinitions":{}}