{"swagger":"2.0","info":{"version":"1.5.0","title":"Slamby API","description":"Slamby API","termsOfService":"None"},"basePath":"/","paths":{"/api/Services/Classifier/{id}":{"get":{"tags":["ClassifierService"],"operationId":"ClassifierGetService","consumes":[],"produces":[],"parameters":[{"name":"id","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"","schema":{"$ref":"#/definitions/ClassifierService"}},"400":{"description":"","schema":{"$ref":"#/definitions/ErrorsModel"}},"404":{"description":"NotFound"}},"deprecated":false}},"/api/Services/Classifier/{id}/Prepare":{"post":{"tags":["ClassifierService"],"operationId":"ClassifierPrepareService","consumes":["application/json","text/json","application/json-patch+json"],"produces":[],"parameters":[{"name":"id","in":"path","required":true,"type":"string"},{"name":"classifierPrepareSettings","in":"body","required":false,"schema":{"$ref":"#/definitions/ClassifierPrepareSettings"}}],"responses":{"202":{"description":"","schema":{"$ref":"#/definitions/Process"}},"400":{"description":"","schema":{"$ref":"#/definitions/ErrorsModel"}},"404":{"description":"","schema":{"$ref":"#/definitions/ErrorsModel"}}},"deprecated":false}},"/api/Services/Classifier/{id}/Activate":{"post":{"tags":["ClassifierService"],"operationId":"ClassifierActivateService","consumes":["application/json","text/json","application/json-patch+json"],"produces":[],"parameters":[{"name":"id","in":"path","required":true,"type":"string"},{"name":"classifierActivateSettings","in":"body","required":false,"schema":{"$ref":"#/definitions/ClassifierActivateSettings"}}],"responses":{"202":{"description":"","schema":{"$ref":"#/definitions/Process"}},"400":{"description":"","schema":{"$ref":"#/definitions/ErrorsModel"}},"404":{"description":"","schema":{"$ref":"#/definitions/ErrorsModel"}}},"deprecated":false}},"/api/Services/Classifier/{id}/Deactivate":{"post":{"tags":["ClassifierService"],"operationId":"ClassifierDeactivateService","consumes":[],"produces":[],"parameters":[{"name":"id","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":""},"400":{"description":"","schema":{"$ref":"#/definitions/ErrorsModel"}},"404":{"description":"","schema":{"$ref":"#/definitions/ErrorsModel"}}},"deprecated":false}},"/api/Services/Classifier/{id}/Recommend":{"post":{"tags":["ClassifierService"],"operationId":"ClassifierRecommendService","consumes":["application/json","text/json","application/json-patch+json"],"produces":[],"parameters":[{"name":"id","in":"path","required":true,"type":"string"},{"name":"request","in":"body","required":false,"schema":{"$ref":"#/definitions/ClassifierRecommendationRequest"}}],"responses":{"200":{"description":"","schema":{"type":"array","items":{"$ref":"#/definitions/ClassifierRecommendationResult"}}},"400":{"description":"","schema":{"$ref":"#/definitions/ErrorsModel"}}},"deprecated":false}},"/api/Services/Classifier/{id}/ExportDictionaries":{"post":{"tags":["ClassifierService"],"operationId":"ClassifierExportDictionaries","consumes":["application/json","text/json","application/json-patch+json"],"produces":[],"parameters":[{"name":"id","in":"path","required":true,"type":"string"},{"name":"settings","in":"body","required":false,"schema":{"$ref":"#/definitions/ExportDictionariesSettings"}}],"responses":{"200":{"description":"","schema":{"$ref":"#/definitions/Process"}},"400":{"description":"","schema":{"$ref":"#/definitions/ErrorsModel"}},"404":{"description":"","schema":{"$ref":"#/definitions/ErrorsModel"}}},"deprecated":false}},"/api/DataSets":{"get":{"tags":["DataSet"],"operationId":"GetDataSets","consumes":[],"produces":[],"responses":{"200":{"description":"","schema":{"type":"array","items":{"$ref":"#/definitions/DataSet"}}}},"deprecated":false},"post":{"tags":["DataSet"],"operationId":"CreateDataSet","consumes":["application/json","text/json","application/json-patch+json"],"produces":[],"parameters":[{"name":"dataSet","in":"body","required":false,"schema":{"$ref":"#/definitions/DataSet"}}],"responses":{"201":{"description":"Created"},"400":{"description":"","schema":{"$ref":"#/definitions/ErrorsModel"}},"409":{"description":"","schema":{"$ref":"#/definitions/ErrorsModel"}}},"deprecated":false}},"/api/DataSets/{name}":{"get":{"tags":["DataSet"],"operationId":"GetDataSet","consumes":[],"produces":[],"parameters":[{"name":"name","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"","schema":{"$ref":"#/definitions/DataSet"}},"404":{"description":"","schema":{"$ref":"#/definitions/ErrorsModel"}}},"deprecated":false},"delete":{"tags":["DataSet"],"operationId":"DeleteDataSet","consumes":[],"produces":[],"parameters":[{"name":"name","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"OK"},"404":{"description":"","schema":{"$ref":"#/definitions/ErrorsModel"}},"406":{"description":"","schema":{"$ref":"#/definitions/ErrorsModel"}}},"deprecated":false}},"/api/DataSets/Schema":{"post":{"tags":["DataSet"],"operationId":"CreateDataSetSchema","consumes":["application/json","text/json","application/json-patch+json"],"produces":[],"parameters":[{"name":"dataSet","in":"body","required":false,"schema":{"$ref":"#/definitions/DataSet"}}],"responses":{"201":{"description":"Created"},"400":{"description":"","schema":{"$ref":"#/definitions/ErrorsModel"}},"409":{"description":"","schema":{"$ref":"#/definitions/ErrorsModel"}}},"deprecated":false}},"/api/DataSets/{existingName}":{"put":{"tags":["DataSet"],"operationId":"UpdateDataSet","consumes":["application/json","text/json","application/json-patch+json"],"produces":[],"parameters":[{"name":"existingName","in":"path","required":true,"type":"string"},{"name":"dataSetUpdate","in":"body","required":false,"schema":{"$ref":"#/definitions/DataSetUpdate"}}],"responses":{"200":{"description":"OK"},"304":{"description":"NotModified"},"404":{"description":"","schema":{"$ref":"#/definitions/ErrorsModel"}},"409":{"description":"","schema":{"$ref":"#/definitions/ErrorsModel"}}},"deprecated":false}},"/api/Documents/Bulk":{"post":{"tags":["Document"],"operationId":"BulkDocuments","consumes":["application/json","text/json","application/json-patch+json"],"produces":[],"parameters":[{"name":"settings","in":"body","required":false,"schema":{"$ref":"#/definitions/DocumentBulkSettings"}}],"responses":{"200":{"description":"","schema":{"$ref":"#/definitions/BulkResults"}},"411":{"description":"","schema":{"$ref":"#/definitions/ErrorsModel"}}},"deprecated":false}},"/api/Documents/{id}":{"get":{"tags":["Document"],"operationId":"GetDocument","consumes":[],"produces":[],"parameters":[{"name":"id","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"","schema":{"type":"object"}},"404":{"description":"","schema":{"$ref":"#/definitions/ErrorsModel"}}},"deprecated":false},"put":{"tags":["Document"],"operationId":"UpdateDocument","consumes":["application/json","text/json","application/json-patch+json"],"produces":[],"parameters":[{"name":"id","in":"path","required":true,"type":"string"},{"name":"document","in":"body","required":false,"schema":{"type":"object"}}],"responses":{"200":{"description":"","schema":{"type":"object"}},"400":{"description":"","schema":{"$ref":"#/definitions/ErrorsModel"}},"404":{"description":"","schema":{"$ref":"#/definitions/ErrorsModel"}}},"deprecated":false},"delete":{"tags":["Document"],"operationId":"DeleteDocument","consumes":[],"produces":[],"parameters":[{"name":"id","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"OK"},"404":{"description":"","schema":{"$ref":"#/definitions/ErrorsModel"}}},"deprecated":false}},"/api/Documents":{"post":{"tags":["Document"],"operationId":"CreateDocument","consumes":["application/json","text/json","application/json-patch+json"],"produces":[],"parameters":[{"name":"document","in":"body","required":false,"schema":{"type":"object"}}],"responses":{"201":{"description":"Created"},"400":{"description":"","schema":{"$ref":"#/definitions/ErrorsModel"}},"409":{"description":"","schema":{"$ref":"#/definitions/ErrorsModel"}}},"deprecated":false}},"/api/Documents/Filter/{scrollId}":{"post":{"tags":["Document"],"operationId":"GetFilteredDocuments","consumes":["application/json","text/json","application/json-patch+json"],"produces":[],"parameters":[{"name":"filterSettings","in":"body","required":false,"schema":{"$ref":"#/definitions/DocumentFilterSettings"}},{"name":"scrollId","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"","schema":{"$ref":"#/definitions/PaginatedList[Object]"}},"400":{"description":"","schema":{"$ref":"#/definitions/ErrorsModel"}}},"deprecated":false}},"/api/Documents/Sample":{"post":{"tags":["Document"],"operationId":"GetSampleDocuments","consumes":["application/json","text/json","application/json-patch+json"],"produces":[],"parameters":[{"name":"sampleSettings","in":"body","required":false,"schema":{"$ref":"#/definitions/DocumentSampleSettings"}}],"responses":{"200":{"description":"","schema":{"$ref":"#/definitions/PaginatedList[Object]"}},"400":{"description":"","schema":{"$ref":"#/definitions/ErrorsModel"}}},"deprecated":false}},"/api/Documents/Copy":{"post":{"tags":["Document"],"operationId":"CopyDocuments","consumes":["application/json","text/json","application/json-patch+json"],"produces":[],"parameters":[{"name":"copySettings","in":"body","required":false,"schema":{"$ref":"#/definitions/DocumentCopySettings"}}],"responses":{"200":{"description":"","schema":{"$ref":"#/definitions/Process"}},"400":{"description":"","schema":{"$ref":"#/definitions/ErrorsModel"}}},"deprecated":false}},"/api/Documents/Move":{"post":{"tags":["Document"],"operationId":"MoveDocuments","consumes":["application/json","text/json","application/json-patch+json"],"produces":[],"parameters":[{"name":"moveSettings","in":"body","required":false,"schema":{"$ref":"#/definitions/DocumentMoveSettings"}}],"responses":{"200":{"description":"","schema":{"$ref":"#/definitions/Process"}},"400":{"description":"","schema":{"$ref":"#/definitions/ErrorsModel"}}},"deprecated":false}},"/api/Helper/FileParser":{"post":{"tags":["Helper"],"operationId":"FileParser","consumes":["application/json","text/json","application/json-patch+json"],"produces":[],"parameters":[{"name":"fileParser","in":"body","required":false,"schema":{"$ref":"#/definitions/FileParser"}}],"responses":{"200":{"description":"","schema":{"$ref":"#/definitions/FileParserResult"}},"400":{"description":"","schema":{"$ref":"#/definitions/ErrorsModel"}}},"deprecated":false}},"/api/License":{"get":{"tags":["License"],"operationId":"GetLicense","consumes":[],"produces":[],"responses":{"200":{"description":"","schema":{"$ref":"#/definitions/License"}}},"deprecated":false},"post":{"tags":["License"],"operationId":"ChangeLicense","consumes":["application/json","text/json","application/json-patch+json"],"produces":[],"parameters":[{"name":"model","in":"body","required":false,"schema":{"$ref":"#/definitions/ChangeLicense"}}],"responses":{"200":{"description":"OK"},"400":{"description":"","schema":{"$ref":"#/definitions/ErrorsModel"}}},"deprecated":false}},"/api/Maintenance/ChangeSecret":{"post":{"tags":["Maintenance"],"operationId":"ChangeSecret","consumes":["application/json","text/json","application/json-patch+json"],"produces":[],"parameters":[{"name":"secret","in":"body","required":false,"schema":{"$ref":"#/definitions/ChangeSecret"}}],"responses":{"200":{"description":"OK"},"406":{"description":"","schema":{"$ref":"#/definitions/ErrorsModel"}}},"deprecated":false}},"/api/Services/Prc/{id}":{"get":{"tags":["PrcService"],"operationId":"PrcGetService","consumes":[],"produces":[],"parameters":[{"name":"id","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"","schema":{"$ref":"#/definitions/PrcService"}}},"deprecated":false}},"/api/Services/Prc/{id}/Prepare":{"post":{"tags":["PrcService"],"operationId":"PrcPrepareService","consumes":["application/json","text/json","application/json-patch+json"],"produces":[],"parameters":[{"name":"id","in":"path","required":true,"type":"string"},{"name":"prcPrepareSettings","in":"body","required":false,"schema":{"$ref":"#/definitions/PrcPrepareSettings"}}],"responses":{"202":{"description":"","schema":{"$ref":"#/definitions/Process"}}},"deprecated":false}},"/api/Services/Prc/{id}/Activate":{"post":{"tags":["PrcService"],"operationId":"PrcActivateService","consumes":["application/json","text/json","application/json-patch+json"],"produces":[],"parameters":[{"name":"id","in":"path","required":true,"type":"string"},{"name":"prcActivateSettings","in":"body","required":false,"schema":{"$ref":"#/definitions/PrcActivateSettings"}}],"responses":{"202":{"description":"","schema":{"$ref":"#/definitions/Process"}}},"deprecated":false}},"/api/Services/Prc/{id}/Deactivate":{"post":{"tags":["PrcService"],"operationId":"PrcDeactivateService","consumes":[],"produces":[],"parameters":[{"name":"id","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":""}},"deprecated":false}},"/api/Services/Prc/{id}/Keywords":{"post":{"tags":["PrcService"],"operationId":"PrcKeywordsService","consumes":["application/json","text/json","application/json-patch+json"],"produces":[],"parameters":[{"name":"id","in":"path","required":true,"type":"string"},{"name":"request","in":"body","required":false,"schema":{"$ref":"#/definitions/PrcKeywordsRequest"}},{"name":"isStrict","in":"query","required":false,"type":"boolean"}],"responses":{"200":{"description":"","schema":{"type":"array","items":{"$ref":"#/definitions/PrcKeywordsResult"}}},"400":{"description":"BadRequest"},"406":{"description":"NotAcceptable"}},"deprecated":false}},"/api/Services/Prc/{id}/Recommend":{"post":{"tags":["PrcService"],"operationId":"PrcRecommendService","consumes":["application/json","text/json","application/json-patch+json"],"produces":[],"parameters":[{"name":"id","in":"path","required":true,"type":"string"},{"name":"request","in":"body","required":false,"schema":{"$ref":"#/definitions/PrcRecommendationRequest"}}],"responses":{"200":{"description":"","schema":{"type":"array","items":{"$ref":"#/definitions/PrcRecommendationResult"}}},"400":{"description":"BadRequest"},"406":{"description":"NotAcceptable"}},"deprecated":false}},"/api/Services/Prc/{id}/Index":{"post":{"tags":["PrcService"],"operationId":"PrcIndexService","consumes":["application/json","text/json","application/json-patch+json"],"produces":[],"parameters":[{"name":"id","in":"path","required":true,"type":"string"},{"name":"prcIndexSettings","in":"body","required":false,"schema":{"$ref":"#/definitions/PrcIndexSettings"}}],"responses":{"202":{"description":"","schema":{"$ref":"#/definitions/Process"}},"400":{"description":"BadRequest"}},"deprecated":false}},"/api/Services/Prc/{id}/IndexPartial":{"post":{"tags":["PrcService"],"operationId":"PrcIndexPartialService","consumes":[],"produces":[],"parameters":[{"name":"id","in":"path","required":true,"type":"string"}],"responses":{"202":{"description":"","schema":{"$ref":"#/definitions/Process"}},"400":{"description":"BadRequest"}},"deprecated":false}},"/api/Services/Prc/{id}/RecommendById":{"post":{"tags":["PrcService"],"operationId":"PrcRecommendByIdService","consumes":["application/json","text/json","application/json-patch+json"],"produces":[],"parameters":[{"name":"id","in":"path","required":true,"type":"string"},{"name":"request","in":"body","required":false,"schema":{"$ref":"#/definitions/PrcRecommendationByIdRequest"}}],"responses":{"200":{"description":"","schema":{"type":"array","items":{"$ref":"#/definitions/PrcRecommendationResult"}}},"400":{"description":"BadRequest"}},"deprecated":false}},"/api/Services/Prc/{id}/ExportDictionaries":{"post":{"tags":["PrcService"],"operationId":"PrcExportDictionaries","consumes":["application/json","text/json","application/json-patch+json"],"produces":[],"parameters":[{"name":"id","in":"path","required":true,"type":"string"},{"name":"settings","in":"body","required":false,"schema":{"$ref":"#/definitions/ExportDictionariesSettings"}}],"responses":{"200":{"description":"","schema":{"$ref":"#/definitions/Process"}}},"deprecated":false}},"/api/Processes":{"get":{"tags":["Process"],"operationId":"GetProcesses","consumes":[],"produces":[],"parameters":[{"name":"allStatus","in":"query","required":false,"type":"boolean"},{"name":"allTime","in":"query","required":false,"type":"boolean"}],"responses":{"200":{"description":"","schema":{"type":"array","items":{"$ref":"#/definitions/Process"}}}},"deprecated":false}},"/api/Processes/{id}":{"get":{"tags":["Process"],"operationId":"GetProcess","consumes":[],"produces":[],"parameters":[{"name":"id","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"","schema":{"$ref":"#/definitions/Process"}},"404":{"description":"","schema":{"$ref":"#/definitions/ErrorsModel"}}},"deprecated":false}},"/api/Processes/{id}/Cancel":{"post":{"tags":["Process"],"operationId":"CancelProcess","consumes":[],"produces":[],"parameters":[{"name":"id","in":"path","required":true,"type":"string"}],"responses":{"202":{"description":"Accepted"},"400":{"description":"","schema":{"$ref":"#/definitions/ErrorsModel"}},"404":{"description":"","schema":{"$ref":"#/definitions/ErrorsModel"}}},"deprecated":false}},"/api/Services/Search/{id}":{"get":{"tags":["SearchService"],"operationId":"SearchGetService","consumes":[],"produces":[],"parameters":[{"name":"id","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"","schema":{"$ref":"#/definitions/SearchService"}},"400":{"description":"","schema":{"$ref":"#/definitions/ErrorsModel"}},"404":{"description":"NotFound"}},"deprecated":false},"post":{"tags":["SearchService"],"operationId":"SearchService","consumes":["application/json","text/json","application/json-patch+json"],"produces":[],"parameters":[{"name":"id","in":"path","required":true,"type":"string"},{"name":"request","in":"body","required":false,"schema":{"$ref":"#/definitions/SearchRequest"}}],"responses":{"200":{"description":"","schema":{"type":"array","items":{"$ref":"#/definitions/SearchResultWrapper"}}},"400":{"description":"","schema":{"$ref":"#/definitions/ErrorsModel"}}},"deprecated":false}},"/api/Services/Search/{id}/Prepare":{"post":{"tags":["SearchService"],"operationId":"SearchPrepareService","consumes":["application/json","text/json","application/json-patch+json"],"produces":[],"parameters":[{"name":"id","in":"path","required":true,"type":"string"},{"name":"searchPrepareSettings","in":"body","required":false,"schema":{"$ref":"#/definitions/SearchPrepareSettings"}}],"responses":{"200":{"description":"Success"},"202":{"description":"","schema":{"$ref":"#/definitions/Process"}},"400":{"description":"","schema":{"$ref":"#/definitions/ErrorsModel"}},"404":{"description":"","schema":{"$ref":"#/definitions/ErrorsModel"}}},"deprecated":false}},"/api/Services/Search/{id}/Activate":{"post":{"tags":["SearchService"],"operationId":"SearchActivateService","consumes":["application/json","text/json","application/json-patch+json"],"produces":[],"parameters":[{"name":"id","in":"path","required":true,"type":"string"},{"name":"searchActivateSettings","in":"body","required":false,"schema":{"$ref":"#/definitions/SearchActivateSettings"}}],"responses":{"200":{"description":"Success"},"202":{"description":"","schema":{"$ref":"#/definitions/Process"}},"400":{"description":"","schema":{"$ref":"#/definitions/ErrorsModel"}},"404":{"description":"","schema":{"$ref":"#/definitions/ErrorsModel"}}},"deprecated":false}},"/api/Services/Search/{id}/Deactivate":{"post":{"tags":["SearchService"],"operationId":"SearchDeactivateService","consumes":[],"produces":[],"parameters":[{"name":"id","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":""},"400":{"description":"","schema":{"$ref":"#/definitions/ErrorsModel"}},"404":{"description":"","schema":{"$ref":"#/definitions/ErrorsModel"}}},"deprecated":false}},"/api/Services":{"get":{"tags":["Service"],"operationId":"GetServices","consumes":[],"produces":[],"responses":{"200":{"description":"","schema":{"type":"array","items":{"$ref":"#/definitions/Service"}}}},"deprecated":false},"post":{"tags":["Service"],"operationId":"CreateService","consumes":["application/json","text/json","application/json-patch+json"],"produces":[],"parameters":[{"name":"service","in":"body","required":false,"schema":{"$ref":"#/definitions/Service"}}],"responses":{"201":{"description":"Created"},"400":{"description":"BadRequest"}},"deprecated":false}},"/api/Services/{id}":{"get":{"tags":["Service"],"operationId":"GetService","consumes":[],"produces":[],"parameters":[{"name":"id","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"","schema":{"$ref":"#/definitions/Service"}},"404":{"description":"NotFound"}},"deprecated":false},"put":{"tags":["Service"],"operationId":"UpdateService","consumes":["application/json","text/json","application/json-patch+json"],"produces":[],"parameters":[{"name":"id","in":"path","required":true,"type":"string"},{"name":"service","in":"body","required":false,"schema":{"$ref":"#/definitions/Service"}}],"responses":{"200":{"description":"","schema":{"$ref":"#/definitions/Service"}},"404":{"description":"NotFound"}},"deprecated":false},"delete":{"tags":["Service"],"operationId":"DeleteService","consumes":[],"produces":[],"parameters":[{"name":"id","in":"path","required":true,"type":"string"}],"responses":{"200":{"description":"OK"},"404":{"description":"NotFound"}},"deprecated":false}},"/api/Statistics/{year}/{month}":{"get":{"tags":["Statistics"],"operationId":"GetStatistics","consumes":[],"produces":[],"parameters":[{"name":"year","in":"modelbinding","required":false,"type":"integer","format":"int32"},{"name":"month","in":"modelbinding","required":false,"type":"integer","format":"int32"}],"responses":{"200":{"description":"","schema":{"$ref":"#/definitions/StatisticsWrapper"}},"400":{"description":"BadRequest"}},"deprecated":false}},"/api/Status":{"get":{"tags":["Status"],"operationId":"GetStatus","consumes":[],"produces":[],"responses":{"200":{"description":"","schema":{"$ref":"#/definitions/Status"}}},"deprecated":false}},"/api/Tags/Bulk":{"post":{"tags":["Tag"],"operationId":"BulkTags","consumes":["application/json","text/json","application/json-patch+json"],"produces":[],"parameters":[{"name":"settings","in":"body","required":false,"schema":{"$ref":"#/definitions/TagBulkSettings"}}],"responses":{"200":{"description":"","schema":{"$ref":"#/definitions/BulkResults"}},"400":{"description":"","schema":{"$ref":"#/definitions/ErrorsModel"}},"411":{"description":"","schema":{"$ref":"#/definitions/ErrorsModel"}}},"deprecated":false}},"/api/Tags/CleanDocuments":{"post":{"tags":["Tag"],"operationId":"CleanDocuments","consumes":[],"produces":[],"responses":{"200":{"description":""}},"deprecated":false}},"/api/Tags":{"get":{"tags":["Tag"],"operationId":"GetTags","consumes":[],"produces":[],"parameters":[{"name":"withDetails","in":"query","required":false,"type":"boolean"}],"responses":{"200":{"description":"","schema":{"type":"array","items":{"$ref":"#/definitions/Tag"}}}},"deprecated":false},"post":{"tags":["Tag"],"operationId":"CreateTag","consumes":["application/json","text/json","application/json-patch+json"],"produces":[],"parameters":[{"name":"tag","in":"body","required":false,"schema":{"$ref":"#/definitions/Tag"}}],"responses":{"201":{"description":"Created","schema":{"$ref":"#/definitions/Tag"}},"409":{"description":"Conflict","schema":{"$ref":"#/definitions/ErrorsModel"}},"406":{"description":"NotAcceptable","schema":{"$ref":"#/definitions/ErrorsModel"}}},"deprecated":false}},"/api/Tags/{id}":{"get":{"tags":["Tag"],"operationId":"GetTag","consumes":[],"produces":[],"parameters":[{"name":"id","in":"path","required":true,"type":"string"},{"name":"withDetails","in":"query","required":false,"type":"boolean"}],"responses":{"200":{"description":"","schema":{"$ref":"#/definitions/Tag"}},"404":{"description":"NotFound","schema":{"$ref":"#/definitions/ErrorsModel"}}},"deprecated":false},"put":{"tags":["Tag"],"operationId":"UpdateTag","consumes":["application/json","text/json","application/json-patch+json"],"produces":[],"parameters":[{"name":"id","in":"path","required":true,"type":"string"},{"name":"tag","in":"body","required":false,"schema":{"$ref":"#/definitions/Tag"}}],"responses":{"200":{"description":"OK"},"404":{"description":"","schema":{"$ref":"#/definitions/ErrorsModel"}},"406":{"description":"","schema":{"$ref":"#/definitions/ErrorsModel"}}},"deprecated":false},"delete":{"tags":["Tag"],"operationId":"DeleteTag","consumes":[],"produces":[],"parameters":[{"name":"id","in":"path","required":true,"type":"string"},{"name":"force","in":"query","required":false,"type":"boolean"},{"name":"cleanDocuments","in":"query","required":false,"type":"boolean"}],"responses":{"200":{"description":"OK"},"404":{"description":"","schema":{"$ref":"#/definitions/ErrorsModel"}},"409":{"description":"","schema":{"$ref":"#/definitions/ErrorsModel"}}},"deprecated":false}},"/api/Tags/ExportWords":{"post":{"tags":["Tag"],"operationId":"WordsExport","consumes":["application/json","text/json","application/json-patch+json"],"produces":[],"parameters":[{"name":"settings","in":"body","required":false,"schema":{"$ref":"#/definitions/TagsExportWordsSettings"}}],"responses":{"200":{"description":"","schema":{"$ref":"#/definitions/Process"}},"400":{"description":"","schema":{"$ref":"#/definitions/ErrorsModel"}}},"deprecated":false}}},"definitions":{"ClassifierService":{"description":"For the common properties detail check the [Service](#/definitions/Service)","required":["Name","Type"],"type":"object","properties":{"PrepareSettings":{"$ref":"#/definitions/ClassifierPrepareSettings"},"ActivateSettings":{"$ref":"#/definitions/ClassifierActivateSettings"},"Id":{"description":"Service unique identifier. It cannot be modified.","type":"string"},"Name":{"description":"User-defined name for the service","type":"string"},"Alias":{"description":"Alias name of the service. Services can be accessed via this name.\r\nAlias can be modified. It is unique amongst the services.","type":"string"},"Description":{"description":"Service description","type":"string"},"Status":{"description":"New - the service was created | \r\nBusy - the service is working on something (e.g.: during the Prepare) | \r\nPrepared - the service was prepared so you can activate it to use | \r\nActive - the service so you can use it","enum":["New","Busy","Prepared","Active"],"type":"string"},"Type":{"description":"Type of the service.\r\nCurrently supported types:\r\n- Classifier\r\n- Prc","enum":["Classifier","Prc","Search"],"type":"string"},"ProcessIdList":{"description":"Contains all the process ids which belong to this service","type":"array","items":{"type":"string"}},"ActualProcessId":{"type":"string"}}},"ClassifierPrepareSettings":{"description":"These settings are required for the training (Prepare method)","required":["DataSetName","NGramList"],"type":"object","properties":{"DataSetName":{"description":"The DataSet name where the Classifier will be trained from","maxLength":50,"minLength":3,"pattern":"/^([a-zA-Z0-9-_]+)$/","type":"string"},"TagIdList":{"description":"The list of the tag Ids which will be trained","type":"array","items":{"type":"string"}},"NGramList":{"description":"The list of the NGrams which will be trained. The maximum NGram can be the DataSet's NGram","type":"array","items":{"format":"int32","type":"integer"}},"CompressLevel":{"format":"int32","description":"","maximum":2,"minimum":0,"type":"integer"},"CompressSettings":{"$ref":"#/definitions/CompressSettings","description":""}}},"ClassifierActivateSettings":{"description":"These settings are required for the recommendation (Recommend method)","type":"object","properties":{"EmphasizedTagIdList":{"description":"The list of the tag Ids which will emphasized during the recommendation","type":"array","items":{"type":"string"}},"TagIdList":{"description":"\"The list of the tag Ids which will be activated (the recommendation will be contains these only)","type":"array","items":{"type":"string"}},"NGramList":{"description":"The list of the NGrams will be activated (the recommendation algorithm will be use these only)","type":"array","items":{"format":"int32","type":"integer"}}}},"CompressSettings":{"type":"object","properties":{"CategoryOccurence":{"format":"int32","description":"","type":"integer"},"DataSetOccurence":{"format":"int32","description":"","type":"integer"},"Operator":{"description":"","enum":["AND","OR"],"type":"string"}}},"ErrorsModel":{"description":"Stores error messages","type":"object","properties":{"Errors":{"type":"array","items":{"type":"string"}}}},"Process":{"description":"","type":"object","properties":{"Id":{"description":"The process GUID identifier","type":"string"},"Start":{"format":"date-time","description":"The UTC time of the process start","type":"string"},"End":{"format":"date-time","description":"The UTC time of the process end","type":"string"},"Percent":{"format":"double","description":"The percent of the whole process. (e.g.: 12.23 means 12.23%)","type":"number"},"Description":{"description":"Process description","type":"string"},"Status":{"description":"InProgress - the process is in progress, it's working |\r\nCancelled - the process was cancelled by the user |\r\nFinished - the process was finished successfully |\r\nError - the process stopped by an error, see the ErrorMessages for detailed information |\r\nInterrupted - the process was interrupted by an unknown event (e.g.: server restart) - under development |\r\nPaused - the process was paused  - under development","enum":["InProgress","Cancelled","Finished","Error","Interrupted","Paused","Cancelling"],"type":"string"},"Type":{"description":"Type of the process","enum":["ClassifierPrepare","PrcPrepare","ClassifierExportDictionaries","PrcExportDictionaries","TagsExportWords","ClassifierActivate","PrcActivate","PrcIndex","PrcIndexPartial","DocumentsCopy","DocumentsMove","SearchPrepare","SearchActivate"],"type":"string"},"ErrorMessages":{"type":"array","items":{"type":"string"}},"ResultMessage":{"type":"string"}}},"ClassifierRecommendationRequest":{"required":["Text"],"type":"object","properties":{"Text":{"description":"The text the you want to classify","type":"string"},"Count":{"format":"int32","description":"How many results you want to see in the response (default value is 3)","type":"integer"},"UseEmphasizing":{"description":"Use emphasizing algorithm during this recommendation","type":"boolean"},"NeedTagInResult":{"description":"If you want to see all the tag object in the response","type":"boolean"}}},"ClassifierRecommendationResult":{"type":"object","properties":{"TagId":{"description":"The recommended tag id","type":"string"},"Score":{"format":"double","description":"The score that belongs to the tag id","type":"number"},"Tag":{"$ref":"#/definitions/Tag"},"IsEmphasized":{"description":"If there was applied emphasizing by this tag","type":"boolean"}}},"Tag":{"description":"Tag object","required":["Id","Name"],"type":"object","properties":{"Id":{"description":"The identifier of the tag. It must be unique across the DataSet","type":"string"},"Name":{"description":"\"Name of the tag","type":"string"},"ParentId":{"description":"The identifier of the parent of the tag. It must be the id of an existing tag","type":"string"},"Properties":{"$ref":"#/definitions/TagProperties","description":"Tag properties"}}},"TagProperties":{"description":"Contains calculated values for the tag","type":"object","properties":{"Paths":{"description":"A tag list contains parent path elements","type":"array","items":{"$ref":"#/definitions/PathItem"}},"Level":{"format":"int32","description":"The level of the tag in the hierarchy (root level is: 0)","type":"integer"},"IsLeaf":{"description":"If the tag is a leaf tag. Leaf tag means the tag is not a parent of any other tags","type":"boolean"},"DocumentCount":{"format":"int32","description":"Document count for the tag","type":"integer"},"WordCount":{"format":"int32","description":"Word count for the tag","type":"integer"}}},"PathItem":{"description":"Tag path item object","type":"object","properties":{"Id":{"description":"Id of the Tag","type":"string"},"Name":{"description":"Name of the Tag","type":"string"},"Level":{"format":"int32","description":"Level of the Tag","type":"integer"}}},"ExportDictionariesSettings":{"type":"object","properties":{"TagIdList":{"type":"array","items":{"type":"string"}},"NGramList":{"type":"array","items":{"format":"int32","type":"integer"}}}},"DataSet":{"description":"DataSet object","required":["Name","NGramCount","IdField","TagField","InterpretedFields"],"type":"object","properties":{"Name":{"description":"Name of your dataset. Can contains just A-Z letters, numbers, _ (underscore) and - (hyphen) without any space. This field is unique","maxLength":50,"minLength":3,"pattern":"/^([a-zA-Z0-9-_]+)$/","type":"string"},"NGramCount":{"format":"int32","description":"To deeper analyze your text, a dataset uses ngram to index your document. You can set the ngramcount from 1 to 6","maximum":6,"minimum":1,"type":"integer"},"IdField":{"description":"To identify a document you need to use IDs. You can use your own conventions to name your ID field, but in the settings you need to provide the field name of the id field from your sample document. Can contains just A-Z letters, numbers, _ (underscore) and - (hyphen) without any space","maxLength":50,"minLength":1,"pattern":"/^([a-zA-Z0-9-_]+)$/","type":"string"},"TagField":{"description":"For text categorization, we provide a predefined document field to store your tags (or categories). If your documents are related to tags or categories, please insert here the tags field name from your sample JSON. Can contains just A-Z letters, numbers, _ (underscore) and - (hyphen) without any space","maxLength":50,"minLength":1,"pattern":"/^([a-zA-Z0-9-_]+)$/","type":"string"},"InterpretedFields":{"description":"For text analysis, you can set those document fields that contains useful text content. Slamby is doing ngram analysis and text process related works on these fields. How to decide which field you need to set here? Only the interpreted field can be a part of text analyzes. To provide these fields just simply insert the needed text fields from your JSON document. Field names can contain just A-Z letters, numbers, _ (underscore) and - (hyphen) without any space","type":"array","items":{"type":"string"}},"Statistics":{"$ref":"#/definitions/DataSetStats","description":"These are read-only calculated values"},"SampleDocument":{"description":"Using flexible document schema, you can store all of your required data inside one simple dataset. To create a dataset with your required schema you can provide a sample document. The schema is flexible; the only requirement is using standard JSON format. Field names can contain just A-Z letters, numbers, _ (underscore) and - (hyphen) without any space","type":"object"},"Schema":{"description":"Using flexible document schema, you can store all of your required data inside one simple dataset. To create a dataset with your required schema you can provide a schema. The schema is flexible. Field names can contain just A-Z letters, numbers, _ (underscore) and - (hyphen) without any space","type":"object"}}},"DataSetStats":{"description":"DataSetStats object","type":"object","properties":{"DocumentsCount":{"format":"int32","description":"Shows the available document number","type":"integer"}}},"DataSetUpdate":{"description":"DataSet update object","required":["Name"],"type":"object","properties":{"Name":{"description":"Name of your dataset. Can contains just A-Z letters, numbers, _ (underscore) and - (hyphen) without any space. This field is unique","maxLength":50,"minLength":3,"pattern":"/^([a-zA-Z0-9-_]+)$/","type":"string"}}},"DocumentBulkSettings":{"required":["Documents"],"type":"object","properties":{"Documents":{"description":"Array of the documents to be saved","type":"array","items":{"type":"object"}}}},"BulkResults":{"type":"object","properties":{"Results":{"description":"Array of the documents to be saved","type":"array","items":{"$ref":"#/definitions/BulkResult"}}}},"BulkResult":{"description":"\"Result of a bulk save element.\r\nIf the save was successful then the StatusCode is 2XX. \r\nIf there was a problem, the StatusCode is not 2XX, and the error message is in the Error field.","type":"object","properties":{"StatusCode":{"format":"int32","description":"HTTP status code","type":"integer"},"Id":{"description":"Document id","type":"string"},"Error":{"description":"Error message","type":"string"}}},"DocumentFilterSettings":{"required":["Pagination"],"type":"object","properties":{"Pagination":{"$ref":"#/definitions/Pagination"},"Order":{"$ref":"#/definitions/Order"},"Filter":{"$ref":"#/definitions/Filter"},"FieldList":{"description":"Query returns only with the specified field(s)","type":"array","items":{"type":"string"}}}},"Pagination":{"type":"object","properties":{"Limit":{"format":"int32","description":"How many element you want to get back in this request","type":"integer"}}},"Order":{"type":"object","properties":{"OrderDirection":{"description":"The ordering of the list, Ascending or Descending","enum":["Asc","Desc"],"type":"string"},"OrderByField":{"description":"It must be an existing field. Declares the base of the ordering","maxLength":50,"minLength":1,"pattern":"/^([a-zA-Z0-9-_]+)$/","type":"string"}}},"Filter":{"type":"object","properties":{"TagIdList":{"description":"You can direct your search queries into specific tags. \r\nBy giving the required tag id list, the filter will affect just the provided tags. \r\nIt's useful to create powerful search queries inside given tags. \r\nTo filter inside a whole dataset, you can set this field to empty","type":"array","items":{"type":"string"}},"Query":{"description":"Set here the filters. The value is the query string you want to apply. \r\nCan be BOOL expressions. You can use these: AND, OR, NOT. \r\nFor example: 'searchforthis AND NOT butnotthis'. \r\nAlso you can use wildcards. For example: 'exampl*'. \r\nIf you want to search in a specified field, than do this: 'title:searchthisinthetitle'","type":"string"}}},"PaginatedList[Object]":{"type":"object","properties":{"Items":{"description":"Containing the actual displayed items. The type of the elements depend on the method","type":"array","items":{"type":"object"}},"Count":{"format":"int32","description":"The count of the actual returned items","type":"integer"},"Total":{"format":"int32","description":"The count of all items which are the pagination applied","type":"integer"},"ScrollId":{"description":"Identifier for the next series of items where it is applicable","type":"string"}}},"DocumentSampleSettings":{"required":["Id"],"type":"object","properties":{"Id":{"description":"It must be a random string for every new sampling, but must be the same for the same sampling during pagination. \r\nIf you leave it empty then it'll be generated automatically, but then you can not use pagination","type":"string"},"TagIdList":{"description":"You can create a sample from a whole dataset, or just from a given tag section. \r\nTo create a sample from the whole dataset please keep it empty. \r\nTo create a sample from a given number of tags please provide the tag ids","type":"array","items":{"type":"string"}},"Percent":{"format":"double","description":"Defining the sample size, you can use percentage or a given number. \r\nUsing a percentage you can define the document number by a percentage. \r\nThis percentage will calculate the document number by using the available dataset document number. \r\nE.g.: if your dataset contains 100.000 documents and you are using 10% as a sampling size without stratified method, your sample size is 100.000 x 10% = 10.000","maximum":100,"minimum":0,"type":"number"},"Size":{"format":"int32","description":"Define your sample size by providing a simple integer. \r\nE.g.: if your dataset contains 100.000 documents and you are using 3.000 as a sampling size without stratified method, your sample size is 3.000","type":"integer"},"FieldList":{"description":"Query returns only with the specified field(s)","type":"array","items":{"type":"string"}}}},"DocumentCopySettings":{"required":["DocumentIdList","TargetDataSetName"],"type":"object","properties":{"DocumentIdList":{"description":"The Id list of the documents you want to copy","type":"array","items":{"type":"string"}},"TargetDataSetName":{"description":"The DataSet name where you want to copy the selected documents","maxLength":50,"minLength":3,"pattern":"/^([a-zA-Z0-9-_]+)$/","type":"string"}}},"DocumentMoveSettings":{"required":["DocumentIdList","TargetDataSetName"],"type":"object","properties":{"DocumentIdList":{"description":"The Id list of the documents you want to move","type":"array","items":{"type":"string"}},"TargetDataSetName":{"description":"The DataSet name where you want to move the selected documents","maxLength":50,"minLength":3,"pattern":"/^([a-zA-Z0-9-_]+)$/","type":"string"}}},"FileParser":{"description":"File parser request","required":["Content"],"type":"object","properties":{"Content":{"description":"Valid base64 document content","type":"string"}}},"FileParserResult":{"description":"File Parser result object","type":"object","properties":{"Content":{"description":"The text content of sent document. Can be empty.","type":"string"},"Title":{"description":"The title of the document. Can be null or empty.","type":"string"},"Date":{"type":"string"},"Author":{"description":"The author of the document. Can be null or empty.","type":"string"},"Keywords":{"description":"Keywords of the document. Can be null or empty.","type":"string"},"ContentType":{"description":"The type of the document (e.g.: application/pdf). Can be empty.","type":"string"},"ContentLength":{"format":"int32","description":"The length of the received document.","type":"integer"},"Language":{"description":"Detected language of the document (e.g.: en). Can be empty.","type":"string"}}},"License":{"type":"object","properties":{"IsValid":{"type":"boolean"},"Message":{"type":"string"},"Type":{"type":"string"},"Base64":{"type":"string"}}},"ChangeLicense":{"required":["License"],"type":"object","properties":{"License":{"type":"string"}}},"ChangeSecret":{"description":"Change Secret model","required":["Secret"],"type":"object","properties":{"Secret":{"description":"New secret to be set","type":"string"}}},"PrcService":{"required":["Name","Type"],"type":"object","properties":{"PrepareSettings":{"$ref":"#/definitions/PrcPrepareSettings"},"ActivateSettings":{"$ref":"#/definitions/PrcActivateSettings"},"IndexSettings":{"$ref":"#/definitions/PrcIndexSettings"},"Id":{"description":"Service unique identifier. It cannot be modified.","type":"string"},"Name":{"description":"User-defined name for the service","type":"string"},"Alias":{"description":"Alias name of the service. Services can be accessed via this name.\r\nAlias can be modified. It is unique amongst the services.","type":"string"},"Description":{"description":"Service description","type":"string"},"Status":{"description":"New - the service was created | \r\nBusy - the service is working on something (e.g.: during the Prepare) | \r\nPrepared - the service was prepared so you can activate it to use | \r\nActive - the service so you can use it","enum":["New","Busy","Prepared","Active"],"type":"string"},"Type":{"description":"Type of the service.\r\nCurrently supported types:\r\n- Classifier\r\n- Prc","enum":["Classifier","Prc","Search"],"type":"string"},"ProcessIdList":{"description":"Contains all the process ids which belong to this service","type":"array","items":{"type":"string"}},"ActualProcessId":{"type":"string"}}},"PrcPrepareSettings":{"required":["DataSetName"],"type":"object","properties":{"DataSetName":{"maxLength":50,"minLength":3,"pattern":"/^([a-zA-Z0-9-_]+)$/","type":"string"},"TagIdList":{"description":"","type":"array","items":{"type":"string"}},"CompressLevel":{"format":"int32","description":"","maximum":2,"minimum":0,"type":"integer"},"CompressSettings":{"$ref":"#/definitions/CompressSettings","description":""}}},"PrcActivateSettings":{"type":"object","properties":{"FieldsForRecommendation":{"type":"array","items":{"type":"string"}}}},"PrcIndexSettings":{"type":"object","properties":{"Filter":{"$ref":"#/definitions/Filter"}}},"PrcKeywordsRequest":{"required":["Text"],"type":"object","properties":{"Text":{"description":"The text which you want to extract the keywords from","type":"string"},"TagId":{"description":"The extracting keywords calculation depends on this Tag. Prc Service try to detect it automatically if it's not provided","type":"string"}}},"PrcKeywordsResult":{"type":"object","properties":{"Word":{"type":"string"},"Score":{"format":"double","type":"number"}}},"PrcRecommendationRequest":{"required":["Text"],"type":"object","properties":{"Text":{"type":"string"},"Filter":{"$ref":"#/definitions/Filter"},"Count":{"format":"int32","type":"integer"},"NeedDocumentInResult":{"type":"boolean"},"TagId":{"type":"string"},"Weights":{"type":"array","items":{"$ref":"#/definitions/Weight"}}}},"Weight":{"description":"Weight object","type":"object","properties":{"Query":{"description":"Set here the filters. The value is the query string you want to apply. \r\nCan be BOOL expressions. You can use these: AND, OR, NOT. \r\nFor example: 'searchforthis AND NOT butnotthis'. \r\nAlso you can use wildcards. For example: 'exampl*'. \r\nIf you want to search in a specified field, than do this: 'title:searchthisinthetitle'","type":"string"},"Value":{"format":"double","maximum":10000,"minimum":0,"type":"number"}}},"PrcRecommendationResult":{"type":"object","properties":{"DocumentId":{"type":"string"},"Score":{"format":"double","type":"number"},"Document":{"type":"object"}}},"PrcRecommendationByIdRequest":{"required":["DocumentId"],"type":"object","properties":{"DocumentId":{"type":"string"},"Query":{"description":"Set here the filters. The value is the query string you want to apply. \r\nCan be BOOL expressions. You can use these: AND, OR, NOT. \r\nFor example: 'searchforthis AND NOT butnotthis'. \r\nAlso you can use wildcards. For example: 'exampl*'. \r\nIf you want to search in a specified field, than do this: 'title:searchthisinthetitle'","type":"string"},"Count":{"format":"int32","type":"integer"},"NeedDocumentInResult":{"type":"boolean"},"TagId":{"type":"string"},"Weights":{"type":"array","items":{"$ref":"#/definitions/Weight"}}}},"SearchService":{"description":"For the common properties detail check the [Service](#/definitions/Service)","required":["Name","Type"],"type":"object","properties":{"PrepareSettings":{"$ref":"#/definitions/SearchPrepareSettings"},"ActivateSettings":{"$ref":"#/definitions/SearchActivateSettings"},"Id":{"description":"Service unique identifier. It cannot be modified.","type":"string"},"Name":{"description":"User-defined name for the service","type":"string"},"Alias":{"description":"Alias name of the service. Services can be accessed via this name.\r\nAlias can be modified. It is unique amongst the services.","type":"string"},"Description":{"description":"Service description","type":"string"},"Status":{"description":"New - the service was created | \r\nBusy - the service is working on something (e.g.: during the Prepare) | \r\nPrepared - the service was prepared so you can activate it to use | \r\nActive - the service so you can use it","enum":["New","Busy","Prepared","Active"],"type":"string"},"Type":{"description":"Type of the service.\r\nCurrently supported types:\r\n- Classifier\r\n- Prc","enum":["Classifier","Prc","Search"],"type":"string"},"ProcessIdList":{"description":"Contains all the process ids which belong to this service","type":"array","items":{"type":"string"}},"ActualProcessId":{"type":"string"}}},"SearchPrepareSettings":{"required":["DataSetName"],"type":"object","properties":{"DataSetName":{"description":"The name of the DataSet in which this service will search","maxLength":50,"minLength":3,"pattern":"/^([a-zA-Z0-9-_]+)$/","type":"string"}}},"SearchActivateSettings":{"type":"object","properties":{"AutoCompleteSettings":{"$ref":"#/definitions/AutoCompleteSettings","description":"The AutoComplete settings to activate (as default setting for all search)\r\nFor the details of this setting check [AutoCompleteSettings](#/definitions/AutoCompleteSettings)"},"SearchSettings":{"$ref":"#/definitions/SearchSettings","description":"The Search settings to activate (as default setting for all search)\r\nFor the details of this setting check [SearchSettings](#/definitions/SearchSettings)"},"ClassifierSettings":{"$ref":"#/definitions/ClassifierSettings","description":"The Classifier settings to activate (as default setting for all search)\r\nFor the details of this setting check [ClassifierSettings](#/definitions/ClassifierSettings)"}}},"AutoCompleteSettings":{"description":"The AutoComplete settings. The AutoComplete is using the [ElasticSearch Phrase Suggester](https://www.elastic.co/guide/en/elasticsearch/reference/current/search-suggesters-phrase.html)","type":"object","properties":{"Confidence":{"format":"double","description":"The confidence level defines a factor applied to the input phrases score which is used as a threshold for other suggest candidates. Only candidates that score higher than the threshold will be included in the result. For instance a confidence level of 1.0 will only return suggestions that score higher than the input phrase. If set to 0.0 the top N candidates are returned. The default is 1.0.","maximum":10000,"minimum":0,"type":"number"},"MaximumErrors":{"format":"double","description":"The maximum percentage of the terms that at most considered to be misspellings in order to form a correction. This method accepts a float value in the range [0..1) as a fraction of the actual query terms or a number &gt;=1 as an absolute number of query terms. The default is set to 1.0 which corresponds to that only corrections with at most 1 misspelled term are returned","maximum":10000,"minimum":0,"type":"number"},"Count":{"format":"int32","description":"The number of candidates that are generated for each individual query term. Low numbers like 3 or 5 typically produce good results. Raising this can bring up terms with higher edit distances","maximum":10000,"minimum":0,"type":"integer"}}},"SearchSettings":{"description":"The Search settings. The search is using ElasticSearch MATCH or QUERYSTRING search. Depends on the Type setting","type":"object","properties":{"Filter":{"$ref":"#/definitions/Filter","description":"The Filter settings"},"UseDefaultFilter":{"description":"When you activate a Search service with a Filter, you can use this property to control if you want to use that 'default filter' during each searches","type":"boolean"},"Weights":{"description":"Can use each available dataset field, a preferred value and a weighted score between 0 and 10 to boost the result","type":"array","items":{"$ref":"#/definitions/Weight"}},"UseDefaultWeights":{"description":"When you activate a Search service with Weights, you can use this property to control if you want to use that 'default weights' during each searches","type":"boolean"},"ResponseFieldList":{"description":"Which dataset fields must be in the search response","type":"array","items":{"type":"string"}},"SearchFieldList":{"description":"In which fields you would liket to search. The list can contains boosts. For example: title^2  which means matches on the title field will have twice the weight as those on the other fields","type":"array","items":{"type":"string"}},"Type":{"description":"The type of the search. Can be MATCH (default) which means a simple word based search or can be QUERY which means you can use expressions in the query, like in the [QueryString Query](https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-query-string-query.html#query-string-syntax) in ElasticSearch","enum":["Match","Query"],"type":"string"},"CutOffFrequency":{"format":"double","description":"Allows specifying an absolute or relative document frequency where high frequency terms are moved into an optional subquery and are only scored if one of the low frequency (below the cutoff) terms in the case of an OR operator or all of the low frequency terms in the case of an AND operator match","maximum":10000,"minimum":0,"type":"number"},"Fuzziness":{"format":"int32","description":"Interpreted as a Levenshtein Edit Distance — the number of one character changes that need to be made to one string to make it the same as another string. Can be specified as: -1 (generates an edit distance based on the length of the term) or 0, 1, 2 (the maximum allowed Levenshtein Edit Distance)","maximum":2,"minimum":-1,"type":"integer"},"Count":{"format":"int32","description":"The maximum number of matches","maximum":10000,"minimum":0,"type":"integer"},"Operator":{"description":"Can be set to OR or AND to control the operators between the text words\r\nFor example if the operator is AND, and the query is: 'white mobilephone' then the 'white' AND the 'mobilephone' must be match the documents\r\nIf the operator is OR in the same query then one of the query words is enough for a match. Of course if a document matches all the words then that will have a higher score","enum":["AND","OR"],"type":"string"},"Order":{"$ref":"#/definitions/Order","description":"You can change the order of the search results. You have to specify a field of the dataset the order (Ascending or Descending)\r\nBe careful with this, if you change the default order then not the most relevant (for the text) documents will be on the top"}}},"ClassifierSettings":{"description":"The related Classifier Settings","type":"object","properties":{"Id":{"description":"The Alias or the ID of the Classifier","type":"string"},"Count":{"format":"int32","description":"How many results the Classifier should response","maximum":10000,"minimum":0,"type":"integer"}}},"SearchRequest":{"required":["Text"],"type":"object","properties":{"Text":{"description":"A simple text or a Query String query, depends on the Type of the search","type":"string"},"AutoCompleteSettings":{"$ref":"#/definitions/AutoCompleteSettings","description":"You can override the activated AutoCompleteSettings during each search. Null means the activated settings will be used"},"SearchSettings":{"$ref":"#/definitions/SearchSettings","description":"You can override the activated SearchSettings during each search. Null means the activated settings will be used"},"ClassifierSettings":{"$ref":"#/definitions/ClassifierSettings","description":"You can override the activated ClassifierSettings during each search. Null means the activated settings will be used"}}},"SearchResultWrapper":{"type":"object","properties":{"AutoCompleteResultList":{"description":"List of the AutoComplete suggestions","type":"array","items":{"$ref":"#/definitions/AutoCompleteResult"}},"ClassifierResultList":{"description":"List of the Classifier results of the input text","type":"array","items":{"$ref":"#/definitions/SearchClassifierRecommendationResult"}},"SearchResultList":{"description":"The matched documents with relevance scores","type":"array","items":{"$ref":"#/definitions/SearchResult"}},"Total":{"format":"int32","description":"The total matched document count","type":"integer"}}},"AutoCompleteResult":{"description":"Contains a suggestion for the input text","type":"object","properties":{"Text":{"description":"The suggested text instead of the original text","type":"string"},"Score":{"format":"double","description":"The score of the suggestion relevance","type":"number"},"ClassifierResultList":{"description":"The related Classifier results for this suggested text","type":"array","items":{"$ref":"#/definitions/SearchClassifierRecommendationResult"}}}},"SearchClassifierRecommendationResult":{"type":"object","properties":{"SearchResultMatch":{"description":"If the recommended category is matched any of the search-matched documents categories","type":"boolean"},"TagId":{"description":"The recommended tag id","type":"string"},"Score":{"format":"double","description":"The score that belongs to the tag id","type":"number"},"Tag":{"$ref":"#/definitions/Tag"},"IsEmphasized":{"description":"If there was applied emphasizing by this tag","type":"boolean"}}},"SearchResult":{"description":"A search result, actually a document itself with a relevance score","type":"object","properties":{"DocumentId":{"description":"The ID of the document","type":"string"},"Score":{"format":"double","description":"The relevance score","type":"number"},"Document":{"description":"The document itself but ONLY the FIELDS that you request with the RESPONSEFIELDLIST parameter","type":"object"}}},"Service":{"required":["Name","Type"],"type":"object","properties":{"Id":{"description":"Service unique identifier. It cannot be modified.","type":"string"},"Name":{"description":"User-defined name for the service","type":"string"},"Alias":{"description":"Alias name of the service. Services can be accessed via this name.\r\nAlias can be modified. It is unique amongst the services.","type":"string"},"Description":{"description":"Service description","type":"string"},"Status":{"description":"New - the service was created | \r\nBusy - the service is working on something (e.g.: during the Prepare) | \r\nPrepared - the service was prepared so you can activate it to use | \r\nActive - the service so you can use it","enum":["New","Busy","Prepared","Active"],"type":"string"},"Type":{"description":"Type of the service.\r\nCurrently supported types:\r\n- Classifier\r\n- Prc","enum":["Classifier","Prc","Search"],"type":"string"},"ProcessIdList":{"description":"Contains all the process ids which belong to this service","type":"array","items":{"type":"string"}},"ActualProcessId":{"type":"string"}}},"StatisticsWrapper":{"description":"Statistics object, describes the usage statistics of periods (months)","type":"object","properties":{"Sum":{"format":"int32","description":"The sum of all requests of all time","type":"integer"},"Statistics":{"description":"dictionary of the statistics, the key is the month of the actual stastistics. The format is yyyy-MM","type":"object","additionalProperties":{"$ref":"#/definitions/Statistics"}}}},"Statistics":{"description":"contains statistics for one period (month)","type":"object","properties":{"Actions":{"description":"List of actions","type":"array","items":{"$ref":"#/definitions/Action"}},"Sum":{"format":"int32","description":"The sum of all requests count in the current period","type":"integer"}}},"Action":{"description":"An action which is measured by the statistics. Currently it is equivalent with the API endpoints","type":"object","properties":{"Name":{"description":"The endpoint name with the HTTP method (if there are multiple HTTP methods for an endpoint)","type":"string"},"Count":{"format":"int32","description":"The request count for this action in the current period","type":"integer"}}},"Status":{"description":"Status object","type":"object","properties":{"ApiVersion":{"description":"API version string","type":"string"},"ProcessorCount":{"format":"int32","description":"Number of processors on the API machine","type":"integer"},"CpuUsage":{"format":"double","description":"CPU usage %","type":"number"},"AvailableFreeSpace":{"format":"double","description":"Available free disk space in MB","type":"number"},"TotalSpace":{"format":"double","description":"Total disk space in MB","type":"number"},"TotalMemory":{"format":"double","description":"Total physical memory in MB","type":"number"},"FreeMemory":{"format":"double","description":"Free physical memory in MB","type":"number"}}},"TagBulkSettings":{"description":"Stores complete tag hierarchy for bulk insert","required":["Tags"],"type":"object","properties":{"Tags":{"description":"The complete tag hierarchy array","type":"array","items":{"$ref":"#/definitions/Tag"}}}},"TagsExportWordsSettings":{"description":"","required":["NGramList"],"type":"object","properties":{"TagIdList":{"type":"array","items":{"type":"string"}},"NGramList":{"type":"array","items":{"format":"int32","type":"integer"}}}}},"securityDefinitions":{}}